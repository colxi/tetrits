var k=Object.defineProperty;var v=(i,t,e)=>t in i?k(i,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):i[t]=e;var o=(i,t,e)=>(v(i,typeof t!="symbol"?t+"":t,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const c of r)if(c.type==="childList")for(const b of c.addedNodes)b.tagName==="LINK"&&b.rel==="modulepreload"&&s(b)}).observe(document,{childList:!0,subtree:!0});function e(r){const c={};return r.integrity&&(c.integrity=r.integrity),r.referrerPolicy&&(c.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?c.credentials="include":r.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function s(r){if(r.ep)return;r.ep=!0;const c=e(r);fetch(r.href,c)}})();class g{constructor(){o(this,"isPressed",!1);o(this,"onCurrentFrame",!1)}get isPressedOnCurrentFrame(){return this.isPressed&&this.onCurrentFrame}}class d{static init(){this.isInitiated||(document.addEventListener("keydown",this.habdleKeyDown.bind(this)),document.addEventListener("keyup",this.habdleKeyUp.bind(this)),this.isInitiated=!0)}static habdleKeyDown(t){switch(t.key){case"ArrowLeft":{t.preventDefault(),this.left.isPressed=!0,this.left.onCurrentFrame=!0;break}case"ArrowRight":{t.preventDefault(),this.right.isPressed=!0,this.right.onCurrentFrame=!0;break}case"ArrowDown":{t.preventDefault(),this.down.isPressed=!0,this.down.onCurrentFrame=!0;break}case"Shift":{t.preventDefault(),this.rotate.isPressed=!0,this.rotate.onCurrentFrame=!0;break}case"Enter":{t.preventDefault(),this.enter.isPressed=!0,this.enter.onCurrentFrame=!0;break}case"P":case"p":{t.preventDefault(),this.pause.isPressed=!0,this.pause.onCurrentFrame=!0;break}}}static habdleKeyUp(t){switch(t.preventDefault(),t.key){case"ArrowLeft":{t.preventDefault(),this.left.isPressed=!1,this.left.onCurrentFrame=!0;break}case"ArrowRight":{t.preventDefault(),this.right.isPressed=!1,this.right.onCurrentFrame=!0;break}case"ArrowDown":{t.preventDefault(),this.down.isPressed=!1,this.down.onCurrentFrame=!0;break}case"Shift":{t.preventDefault(),this.rotate.isPressed=!1,this.rotate.onCurrentFrame=!0;break}case"Enter":{t.preventDefault(),this.enter.isPressed=!1,this.enter.onCurrentFrame=!0;break}case"P":case"p":{t.preventDefault(),this.pause.isPressed=!1,this.pause.onCurrentFrame=!0;break}}}static update(){this.down.onCurrentFrame=!1,this.left.onCurrentFrame=!1,this.right.onCurrentFrame=!1,this.rotate.onCurrentFrame=!1,this.pause.onCurrentFrame=!1,this.enter.onCurrentFrame=!1}}o(d,"isInitiated",!1),o(d,"enter",new g),o(d,"down",new g),o(d,"left",new g),o(d,"right",new g),o(d,"rotate",new g),o(d,"pause",new g);class m{}o(m,"infoBox",document.getElementById("infoBox")),o(m,"boardCanvas",document.getElementById("boardCanvas")),o(m,"UICanvas",document.getElementById("UICanvas"));function D(i){return JSON.parse(JSON.stringify(i))}function F(i,t){return Math.floor(Math.random()*(t-i+1)+i)}function w(i,t){const e=[];for(let s=0;s<t;s++){const r=Array(i).fill(0);e.push(r)}return e}class T{constructor(t){o(this,"x",4);o(this,"y",0);o(this,"data",w(4,3));o(this,"id");this.data=D(t.data),this.id=t.id}get width(){return this.data[0].length}get height(){return this.data.length}getBlockData(t,e){return this.data[e][t]}rotate(t){const e=this.data[0].map((s,r)=>this.data.map(c=>c[r]).reverse());for(let s=0;s<e.length;s++)for(let r=0;r<e[s].length;r++)if(this.x+r>=t.width||this.y+s>=t.height||e[s][r]&&t.boardData[this.y+s][this.x+r])return;this.data=e}clone(){const t=new T({data:this.data,id:this.id});return t.x=this.x,t.y=this.y,t}}var f=(i=>(i.T="T",i.S="S",i.L="L",i.S_INVERTED="T_INVERTED",i.L_INVERTED="L_INVERTED",i.SQUARE="SQUARE",i.LINE="LINE",i))(f||{});const C=[{id:f.L,data:[[0,0,1],[1,1,1]]},{id:f.L_INVERTED,data:[[1,0,0],[1,1,1]]},{id:f.SQUARE,data:[[1,1],[1,1]]},{id:f.T,data:[[0,1,0],[1,1,1]]},{id:f.S,data:[[0,1,1],[1,1,0]]},{id:f.S_INVERTED,data:[[1,1,0],[0,1,1]]},{id:f.LINE,data:[[1,1,1,1]]}],n={speedMultiplier:10,grid:{width:10,height:20},block:{size:20}},h=class h{static get width(){return this.boardData[0].length}static get height(){return this.boardData.length}static init(){this.canvas.width=n.block.size*n.grid.width,this.canvas.height=n.block.size*n.grid.height,this.context.imageSmoothingEnabled=!1}static render(){this.context.lineWidth=2,this.context.fillStyle="#fcbe24",this.context.strokeStyle="#fcbe24",this.context.clearRect(0,0,this.canvas.width,this.canvas.height);for(let e=0;e<n.grid.height;e++)for(let s=0;s<n.grid.width;s++){const r=s*n.block.size,c=e*n.block.size;h.boardData[e][s]?this.context.fillRect(r,c,n.block.size,n.block.size):this.context.strokeRect(r,c,n.block.size,n.block.size)}for(let e=0;e<h.currentTetromino.height;e++)for(let s=0;s<h.currentTetromino.width;s++){if(!h.currentTetromino.getBlockData(s,e))continue;const r=(s+h.currentTetromino.x)*n.block.size,c=(e+h.currentTetromino.y)*n.block.size;this.context.fillRect(r,c,n.block.size,n.block.size)}const t=this.currentTetromino.clone();for(;;)if(t.y++,h.hasCollistion(t)){t.y--;break}for(let e=0;e<t.height;e++)for(let s=0;s<t.width;s++){if(!t.getBlockData(s,e))continue;const r=(s+t.x)*n.block.size,c=(e+t.y)*n.block.size;this.context.fillStyle="#fcbe2488",this.context.fillRect(r,c,n.block.size,n.block.size)}}static reset(){this.boardData=w(n.grid.width,n.grid.height),this.createNewTetromino()}static hasBlocksInFirstRow(){return this.boardData[0].some(Boolean)}static getRandomTetromino(){const t=F(0,C.length-1);return new T(C[t])}static createNewTetromino(){this.currentTetromino=this.nextTetromino,this.nextTetromino=this.getRandomTetromino()}static getBlockData(t,e){return this.boardData[e][t]}static hasCollistion(t=this.currentTetromino){if(t.y+t.height>this.height||t.x<0||t.x+t.width>this.width)return!0;for(let e=0;e<t.height;e++)for(let s=0;s<t.width;s++){const r=t.x+s,c=t.y+e,b=this.getBlockData(r,c);if(t.getBlockData(s,e)&&b)return!0}return!1}static fixCurrentTetrominoToBoard(){for(let t=0;t<this.currentTetromino.height;t++)for(let e=0;e<this.currentTetromino.width;e++)if(this.currentTetromino.getBlockData(e,t)){const s=this.currentTetromino.x+e,r=this.currentTetromino.y+t;this.boardData[r][s]=1}}static processCompletdeRows(){let t=0;for(let e=0;e<this.boardData.length;e++)!this.boardData[e].some(c=>c===0)&&(t++,this.boardData.splice(e,1),this.boardData.unshift([0,0,0,0,0,0,0,0,0,0]),this.createNewTetromino());return t}};o(h,"context",m.boardCanvas.getContext("2d")),o(h,"canvas",m.boardCanvas),o(h,"currentTetromino",h.getRandomTetromino()),o(h,"nextTetromino",h.getRandomTetromino()),o(h,"boardData",w(n.grid.width,n.grid.height));let a=h;class p{static init(){this.canvas.width=n.block.size*6,this.canvas.height=n.block.size*4,this.context.imageSmoothingEnabled=!1,this.context.strokeStyle="#fcbe24",this.context.fillStyle="#fcbe24",this.context.lineWidth=2}static render(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.context.strokeRect(0,0,this.canvas.width,this.canvas.height);const t=20,e=20;for(let s=0;s<a.nextTetromino.height;s++)for(let r=0;r<a.nextTetromino.width;r++){if(!a.nextTetromino.data[s][r])continue;const c=r*n.block.size+t,b=s*n.block.size+e;this.context.fillRect(c,b,n.block.size,n.block.size)}m.infoBox.innerHTML=`
     ${l.isPaused?"PAUSED<br/><br/>":""}
     Level: ${l.level}<br/>
     Points: ${l.score}<br/><br/>
     ARROW = Move<br/>
     SHIFT = Rotate<br/>
     ENTER = Fall<br/>
     P = Pause<br/>
   `}}o(p,"context",m.UICanvas.getContext("2d")),o(p,"canvas",m.UICanvas);const u=class u{static get level(){return Math.floor(this.speed/5)}static pause(){this.isPaused=!0}static resume(){this.isPaused=!1}static start(){p.init(),d.init(),a.init(),this.loop(0)}static loop(t){this.update(t),this.render(t),d.update(),requestAnimationFrame(this.boundedLoopMethod)}static onUpdate(t){this.update=t}static onRender(t){this.render=t}};o(u,"score",0),o(u,"speed",0),o(u,"isPaused",!1),o(u,"boundedLoopMethod",u.loop.bind(u)),o(u,"update",()=>{}),o(u,"render",()=>{});let l=u,x=0;function P(i){i-x>1500-l.speed*n.speedMultiplier&&(x=i,a.currentTetromino.y++,a.hasCollistion()&&(a.currentTetromino.y--,y()))}function R(i){if(d.enter.isPressedOnCurrentFrame){for(;;)if(a.currentTetromino.y++,a.hasCollistion()){a.currentTetromino.y--,y();break}}d.rotate.isPressedOnCurrentFrame&&a.currentTetromino.rotate(a),d.left.isPressedOnCurrentFrame&&(a.currentTetromino.x--,a.hasCollistion()&&a.currentTetromino.x++),d.right.isPressedOnCurrentFrame&&(a.currentTetromino.x++,a.hasCollistion()&&a.currentTetromino.x--),d.down.isPressedOnCurrentFrame&&(a.currentTetromino.y++,a.hasCollistion()?(a.currentTetromino.y--,y()):x=i)}function y(){a.fixCurrentTetrominoToBoard();const i=a.processCompletdeRows();i&&(l.score+=i*10,l.speed+=1),a.hasBlocksInFirstRow()&&(a.reset(),l.score=0,l.speed=0),a.createNewTetromino()}l.onUpdate(i=>{d.pause.isPressed&&d.pause.onCurrentFrame&&(l.isPaused?l.resume():l.pause()),!l.isPaused&&(P(i),R(i))});l.onRender(()=>{a.render(),p.render()});l.start();
